cout = function(str) { document.getElementById("myResults").value += str;};cls = function() { document.getElementById("myResults").value = "";};myEval = function() { var str; cls(); try { with (Math) { str = eval(document.getElementById("myScript").value); } } catch(err) { str = err.name+" : "+err.message; } if (str != undefined) {cout(str)}; };layout = {showlegend: false, xaxis:{autorange:true,title:"Year"},yaxis:{autorange:true}};function make_plot(foo){ Plotly.newPlot("myPlot", foo, layout)};function curves(goo,foo1,foo2){return [{x:goo,y:foo1,mode:'line',line:{color:'#2ca02c'}},{x:goo,y:foo2,mode:'line',line:{color:'#ff2c2c'}}]};function ema(goo,foo){ var ema_array=[]; var alpha=2/(goo+1); ema_array[0]=foo[0]; for (var i = 1; i < foo.length; i++) { ema_array[i] = alpha*foo[i]+(1-alpha)*ema_array[i-1] }return ema_array };function vec_log(foo){ var log_array=[]; for (var i = 0; i < foo.length; i++) { log_array[i] = Math.log10(foo[i]) }return log_array};function CAGR_raw(foo,goo){return Math.pow(10,(Math.log10(foo[foo.length-1]/foo[0]))/(goo[goo.length-1]-goo[0]))-1};function CAGR(foo,goo){return Math.pow(10,(foo[foo.length-1]-foo[0])/(goo[goo.length-1]-goo[0]))-1};function sum1(foo){ var sum=0.0; for (var i = 0; i < foo.length; i++) { sum+= Number(foo[i]) }return sum};function sum2(foo, goo){ var sum=0.0; for (var i = 0; i < foo.length; i++) { sum+= Number(foo[i])*Number(goo[i]) }return sum};function mean(foo){return sum1(foo)/foo.length};function linear_regression(goo,foo){ var linear=[]; var b=(sum2(goo,foo)-sum1(goo)*sum1(foo)/foo.length)/(sum2(goo,goo)-sum1(goo)*sum1(goo)/foo.length); var a=mean(foo)-b*mean(goo); for (i = 0; i < goo.length; i++) { linear[i]= a+b*goo[i]; }return linear};function make_data(foo){ var temp=[]; var temp_day=[]; var foo_date=[]; var foo_asset=[]; for (var i = 0; i < foo.length; i++) { temp= foo[i].split("&"); temp_day=temp[0].split("-"); foo_date[i]=Number(temp_day[0])+Number(temp_day[1])/12+Number(temp_day[2])/365; foo_asset[i]=temp[1]; } return [foo_date, foo_asset]};